/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.hibernate.hql.internal.ast.tree.RestrictableStatement;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.organisastion.dao.TaskDao;
import com.gomap.performance.organisastion.model.EmTask;

/**
 * @author krishnakant.bairagi
 *
 */
@Repository
public class TaskDaoImpl implements TaskDao {

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.TaskDao#createTask(com.gomap.performance.organisastion.model.EmTask)
	 */
	@Autowired
	private SessionFactory sessionFactory;

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.TaskDao#createTask(com.gomap.performance.organisastion.model.EmTask)
	 */
	@Override
	public void createTask(EmTask emTask) throws Exception {
		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().save(emTask);
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.TaskDao#updateTask(com.gomap.performance.organisastion.model.EmTask)
	 */
	@Override
	public void updateTask(EmTask emTask) throws Exception {
		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().update(emTask);
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.TaskDao#deleteTask(com.gomap.performance.organisastion.model.EmTask)
	 */
	@Override
	public void deleteTask(EmTask emTask) throws Exception {
		// TODO Auto-generated method stub
		updateTask(emTask);
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.TaskDao#getTask(com.gomap.performance.organisastion.model.EmTask)
	 */
	@Override
	public List<EmTask> getTask(EmTask emTask) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=sessionFactory.getCurrentSession().createCriteria(EmTask.class);
		if(emTask!=null && emTask.getTaskId()!=null)
		{
			criteria.add(Restrictions.eq("taskId", emTask.getTaskId()));
		}
		if(emTask.getDepartmentId()!=null)
		{
			criteria.add(Restrictions.eq("departmentId", emTask.getDepartmentId()));
		}
		if(emTask.getAssignedById()!=null)
		{
			criteria.add(Restrictions.eq("assignedById", emTask.getAssignedById()));
		}
		if(emTask.getAssignedToId()!=null)
		{
			criteria.add(Restrictions.eq("assignedToId", emTask.getAssignedToId()));
		}
		if(emTask.getTaskDueDate()!=null)
		{
			criteria.add(Restrictions.eq("taskDueDate", emTask.getTaskDueDate()));
		}
		criteria.add(Restrictions.eq("activateFlag",AppConstants.ACTIVE_FLAG));
		criteria.addOrder(Order.desc("taskCreatedDate"));
		return criteria.list();
	}
	
	}
