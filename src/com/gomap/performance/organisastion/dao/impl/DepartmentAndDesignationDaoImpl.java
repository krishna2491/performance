/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.dto.ResponseDTO;
import com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao;
import com.gomap.performance.organisastion.model.DesignationElementMaping;
import com.gomap.performance.organisastion.model.EmDepartment;
import com.gomap.performance.organisastion.model.EmDesignation;
import com.gomap.performance.organisastion.model.RoleElementOperationMpg;
import com.gomap.performance.organisastion.service.impl.EmployeeServiceImpl;

/**
 * @author krishnakant.bairagi
 *
 */
@Repository
public class DepartmentAndDesignationDaoImpl implements DepartmentAndDesignationDao {
	private static final Logger logger = LoggerFactory.getLogger(DepartmentAndDesignationDaoImpl.class);
	@Autowired
	private SessionFactory sessionFactory;

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#createDepartment(com.gomap.performance.organisastion.model.EmDepartment)
	 */
	@Override
	public EmDepartment createDepartment(EmDepartment emDepartment) throws Exception {
		// TODO Auto-generated method stub
		this.sessionFactory.getCurrentSession().save(emDepartment);
		return emDepartment;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#createDesignation(com.gomap.performance.organisastion.model.EmDesignation)
	 */
	@Override
	public EmDesignation createDesignation(EmDesignation emDesignation) throws Exception {
		// TODO Auto-generated method stub
		this.sessionFactory.getCurrentSession().save(emDesignation);
		
		return emDesignation;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#updateDepartment(com.gomap.performance.organisastion.model.EmDepartment)
	 */
	@Override
	public EmDepartment updateDepartment(EmDepartment emDepartment) throws Exception {
		// TODO Auto-generated method stub
		this.sessionFactory.getCurrentSession().update(emDepartment);
		return emDepartment;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#updateDesignation(com.gomap.performance.organisastion.model.EmDesignation)
	 */
	@Override
	public EmDesignation updateDesignation(EmDesignation emDesignation) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#deleteDepartment(com.gomap.performance.organisastion.model.EmDepartment)
	 */
	@Override
	public void deleteDepartment(EmDepartment emDepartment) throws Exception {
		// TODO Auto-generated method stub
		this.sessionFactory.getCurrentSession().update(emDepartment);
		
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#deleteDesignation(com.gomap.performance.organisastion.model.EmDesignation)
	 */
	@Override
	public void deleteDesignation(EmDesignation emDesignation) throws Exception {
		// TODO Auto-generated method stub
		this.sessionFactory.getCurrentSession().update(emDesignation);
		
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#getDepartment(java.lang.Integer)
	 */
	@Override
	public List<EmDepartment> getDepartment(Integer departmentId) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=this.sessionFactory.getCurrentSession().createCriteria(EmDepartment.class);
		if(departmentId!=null)
		{
			criteria.add(Restrictions.eq("departmentId", departmentId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		criteria.addOrder(Order.desc("departmentCreatedDate"));
		return criteria.list();
	}

	
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#getDesignation(java.lang.Integer, java.lang.Integer)
	 */
	@Override
	public List<EmDesignation> getDesignation(Integer designationId, Integer departmentId) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=this.sessionFactory.getCurrentSession().createCriteria(EmDesignation.class);
		if(designationId!=null)
		{
			criteria.add(Restrictions.eq("designationId", designationId));
		}if(departmentId!=null)
		{
			criteria.add(Restrictions.eq("departmentId", departmentId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		criteria.addOrder(Order.desc("designationCreatedDate"));
		return criteria.list();
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#mapDesignationElement(com.gomap.performance.organisastion.model.DesignationElementMaping)
	 */
	@Override
	public DesignationElementMaping mapDesignationElement(DesignationElementMaping designationElementMaping) throws Exception {
		// TODO Auto-generated method stub
this.sessionFactory.getCurrentSession().save(designationElementMaping);
		
		return designationElementMaping;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#mapOperation(com.gomap.performance.organisastion.model.RoleElementOperationMpg)
	 */
	@Override
	public RoleElementOperationMpg mapOperation(RoleElementOperationMpg roleElementOperationMpg) throws Exception {
		// TODO Auto-generated method stub
this.sessionFactory.getCurrentSession().save(roleElementOperationMpg);
		
		return roleElementOperationMpg;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#getDesignationElement(java.lang.Integer)
	 */
	@Override
	public List<DesignationElementMaping> getDesignationElement(Integer designationId) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=this.sessionFactory.getCurrentSession().createCriteria(DesignationElementMaping.class);
		if(designationId!=null)
		{
			criteria.add(Restrictions.eq("designationId", designationId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		
		return criteria.list();
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#getDesignationElementOperation(java.lang.Integer)
	 */
	@Override
	public List<RoleElementOperationMpg> getDesignationElementOperation(Integer designationElementMpgId)
			throws Exception {
		Criteria criteria=this.sessionFactory.getCurrentSession().createCriteria(RoleElementOperationMpg.class);
		if(designationElementMpgId!=null)
		{
			criteria.add(Restrictions.eq("designationElementMpgId", designationElementMpgId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		return criteria.list();
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#updateDesignationElement(com.gomap.performance.organisastion.model.DesignationElementMaping)
	 */
	@Override
	public DesignationElementMaping updateDesignationElement(DesignationElementMaping designationElementMaping)
			throws Exception {
this.sessionFactory.getCurrentSession().update(designationElementMaping);
		
		return designationElementMaping;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#updateOperation(com.gomap.performance.organisastion.model.RoleElementOperationMpg)
	 */
	@Override
	public RoleElementOperationMpg updateOperation(RoleElementOperationMpg roleElementOperationMpg) throws Exception {
		// TODO Auto-generated method stub
this.sessionFactory.getCurrentSession().update(roleElementOperationMpg);
		
		return roleElementOperationMpg;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.dao.DepartmentAndDesignationDao#getDesignationElementOperation(com.gomap.performance.organisastion.model.RoleElementOperationMpg)
	 */
	

	}
