/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.service.impl;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.gomap.performance.organisastion.dao.EmployeeDao;
import com.gomap.performance.organisastion.dto.EmEmployeeDto;
import com.gomap.performance.organisastion.dto.EmployeeDto;
import com.gomap.performance.organisastion.dto.ResponseDTO;
import com.gomap.performance.organisastion.enumorg.ErrorCodeEnums;
import com.gomap.performance.organisastion.model.EmDepartment;
import com.gomap.performance.organisastion.model.EmDesignation;
import com.gomap.performance.organisastion.model.EmEmployee;
import com.gomap.performance.organisastion.service.EmployeeService;


/**
 * @author krishnakant.bairagi
 *
 */
@Service
public class EmployeeServiceImpl implements EmployeeService {
	private static final Logger logger = LoggerFactory.getLogger(EmployeeServiceImpl.class);
	
	@Autowired
	private EmployeeDao empDao;
	@Autowired
	private HttpSession httpSession;
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#addEmployee(com.gomap.performance.organisastion.dto.EmEmployeeDto)
	 */
	@Override
	@Transactional
	public ResponseDTO addEmployee(EmEmployeeDto employeeDto) throws Exception {
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			logger.debug("addEmployee ");
			EmEmployee emEmployee=new EmEmployee();
			if(employeeDto.getDesignationId()!=null)
			{
				emEmployee.setDesignationId(employeeDto.getDesignationId());
			}
			if(employeeDto.getGender()!=null)
			{
				emEmployee.setGender(employeeDto.getGender());
			}
			if(employeeDto.getEmployeeEmail()!=null)
			{
				emEmployee.setEmployeeEmail(employeeDto.getEmployeeEmail());
			}
			if(employeeDto.getEmployeeFname()!=null)
			{
				emEmployee.setEmployeeFname(employeeDto.getEmployeeFname());
			}
			if(employeeDto.getEmployeeMname()!=null)
			{
				emEmployee.setEmployeeMname(employeeDto.getEmployeeMname());
			}
			if(employeeDto.getEmployeeMobileNo()!=null)
			{
				emEmployee.setEmployeeMobileNo(employeeDto.getEmployeeMobileNo());
			}
			if(employeeDto.getEmployeePassword()!=null)
			{
				emEmployee.setEmployeePassword(employeeDto.getEmployeePassword());
			}
			if(employeeDto.getEmployeeProfileImg()!=null)
			{
				emEmployee.setEmployeeProfileImg(employeeDto.getEmployeeProfileImg());
			}
			emEmployee.setActivateFlag(1);
			emEmployee.setEmployeeCreatedDate(new Date());
			empDao.storeEmployeeData(emEmployee);
			responseDTO.setSuccessMsg("Employee created Successfully");
			responseDTO.setDataObj(emEmployee);
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error("Getting Error while creating Employee");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#employeeRoleMapping(com.gomap.performance.organisastion.dto.EmEmployeeDto)
	 */
	@Override
	public ResponseDTO employeeRoleMapping(EmEmployeeDto employeeDto) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#employeeDepratmentMapping(com.gomap.performance.organisastion.dto.EmEmployeeDto)
	 */
	@Override
	public ResponseDTO employeeDepratmentMapping(EmEmployeeDto employeeDto) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#getMySkill()
	 */
	@Override
	public ResponseDTO getMySkill() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#getMyTask()
	 */
	@Override
	public ResponseDTO getMyTask() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#getMyGoal()
	 */
	@Override
	public ResponseDTO getMyGoal() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#getEmployeeList(java.lang.Integer)
	 */
	@Override
	@Transactional
	public ResponseDTO getEmployeeList(Integer employeeId) throws Exception {

		ResponseDTO responseDTO=new ResponseDTO();
		try {
			logger.debug("getting getEmployeeList employeeId="+employeeId);
			List<EmEmployee> employeeList=empDao.getEmployeeList(employeeId);
			responseDTO.setDataObj(employeeList);
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error(" Error while getting EmployeeList");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#updateEmployee(com.gomap.performance.organisastion.dto.EmEmployeeDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateEmployee(EmEmployeeDto employeeDto) throws Exception {
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			logger.debug("updateEmployee ");
			if(employeeDto!=null && employeeDto.getEmployeeId()!=null)
			{
				List<EmEmployee> employeeList=empDao.getEmployeeList(employeeDto.getEmployeeId());
				if(employeeList.isEmpty())
				{
					responseDTO.setDataObj(null);
					responseDTO.setErrorMsg("Employee data is not available in system");
					responseDTO.setErrorCode(411);
					return 	responseDTO;				
				}else {
					EmEmployee emEmployee=employeeList.get(0);
							if(employeeDto.getDesignationId()!=null)
							{
								emEmployee.setDesignationId(employeeDto.getDesignationId());
							}
							if(employeeDto.getGender()!=null)
							{
								emEmployee.setGender(employeeDto.getGender());
							}
							if(employeeDto.getEmployeeEmail()!=null)
							{
								emEmployee.setEmployeeEmail(employeeDto.getEmployeeEmail());
							}
							if(employeeDto.getEmployeeFname()!=null)
							{
								emEmployee.setEmployeeFname(employeeDto.getEmployeeFname());
							}
							if(employeeDto.getEmployeeMname()!=null)
							{
								emEmployee.setEmployeeMname(employeeDto.getEmployeeMname());
							}
							if(employeeDto.getEmployeeMobileNo()!=null)
							{
								emEmployee.setEmployeeMobileNo(employeeDto.getEmployeeMobileNo());
							}
							if(employeeDto.getEmployeePassword()!=null)
							{
								emEmployee.setEmployeePassword(employeeDto.getEmployeePassword());
							}
							if(employeeDto.getEmployeeProfileImg()!=null)
							{
								emEmployee.setEmployeeProfileImg(employeeDto.getEmployeeProfileImg());
							}
							emEmployee.setActivateFlag(1);
							emEmployee.setEmployeeUpdatedDate(new Date());
							empDao.storeEmployeeData(emEmployee);
							responseDTO.setDataObj(emEmployee);
							responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
							responseDTO.setSuccessMsg("Employee data updated successfully!!");
							
				}
			}
			else {
				responseDTO.setDataObj(null);
				responseDTO.setErrorMsg("Employee id can not be null");
				responseDTO.setErrorCode(411);
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error("Getting Error while updating Employee");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.EmployeeService#getAllEmployee()
	 */
	@Override
	@Transactional
	public ResponseDTO getAllEmployee() throws Exception {
		// TODO Auto-generated method stub
		logger.info("getAllEmployee ");
		ResponseDTO responseDTO=null;
		try {
			responseDTO=new ResponseDTO();
			responseDTO.setDataObj(empDao.getAllEmplyeeData());
			responseDTO.setSuccessMsg("Employee sent successfully");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			;
			
		} catch (Exception e) {
			// TODO: handle exception
			logger.error("Error in getAllEmployee",e);
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
		}
		return responseDTO;
	}
	
		}
