/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.service.impl;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.organisastion.dao.ProjectDao;
import com.gomap.performance.organisastion.dto.ProjectDto;
import com.gomap.performance.organisastion.dto.ResponseDTO;
import com.gomap.performance.organisastion.enumorg.ErrorCodeEnums;
import com.gomap.performance.organisastion.model.EmProject;
import com.gomap.performance.organisastion.model.EmSkill;
import com.gomap.performance.organisastion.service.ProjectService;

/**
 * @author krishnakant.bairagi
 *	
 */
@Service
public class ProjectServiceImpl implements ProjectService {
	private static final Logger logger = LoggerFactory.getLogger(ProjectServiceImpl.class);

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#addProject(com.gomap.performance.organisastion.dto.ProjectDto)
	 */
	
	@Autowired
	private ProjectDao projectDao;
	
	@Override
	@Transactional
	public ResponseDTO addProject(ProjectDto projectDto) throws Exception {
		// TODO Auto-generated method stub
		ResponseDTO dto=new ResponseDTO();
		EmProject project=new EmProject();
		try {

			if (projectDto.getProjectName() != null && !("").equals(projectDto.getProjectName().trim())) {
				List<EmProject> projectList = projectDao.getProjectList(null, projectDto.getProjectName(),projectDto.getDepartmentId(),null);
				
				if(projectList.isEmpty())
				{
					project.setProjectName(projectDto.getProjectName());
					project.setProjectDescription(projectDto.getProjectDescription());
					project.setDepartmentId(projectDto.getDepartmentId());
					project.setProjectAttachment(projectDto.getProjectAttachment());
					project.setProjectStartDate(projectDto.getProjectStartDate());
					project.setProjectDueDate(projectDto.getProjectDueDate());
					project.setProjectCreatedDate(new Date());
					project.setProjectCreatedBy(projectDto.getProjectCreatedBy());
					project.setProjectPriority(projectDto.getProjectPriority());
					project.setActivateFlag(AppConstants.ACTIVE_FLAG);
					project.setProjectStatus(projectDto.getProjectStatus());
					if(projectDto.getComment()!=null)
					{
						project.setComment(projectDto.getComment());
					}
					if(projectDto.getReply()!=null)
					{
						project.setReply(projectDto.getReply());
					}
					projectDao.addProject(project);

					dto.setSuccessMsg("project created");
					dto.setDataObj(project);
					dto.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
				}else
				{
					dto.setErrorMsg("project is already availabe");
					dto.setDataObj(projectList);
					dto.setErrorCode(411);
				}
			}else
			{
				dto.setErrorMsg("project name is mandatory");
				dto.setDataObj(null);
				dto.setErrorCode(411);
			}

			

		} catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
					logger.error("addProject,",e);
				}
			return dto;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#updateProject(com.gomap.performance.organisastion.dto.ProjectDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateProject(ProjectDto projectDto) throws Exception {
		// TODO Auto-generated method stub
		ResponseDTO dto=new ResponseDTO();
		EmProject project=new EmProject();
				try {
					project.setProjectId(projectDto.getProjectId());
					project.setProjectName(projectDto.getProjectName());
					project.setProjectDescription(projectDto.getProjectDescription());
					project.setDepartmentId(projectDto.getDepartmentId());
					project.setProjectAttachment(projectDto.getProjectAttachment());
					project.setProjectCreatedDate(projectDto.getProjectCreatedDate());
					project.setProjectCreatedBy(projectDto.getProjectCreatedBy());
					project.setProjectPriority(projectDto.getProjectPriority());
					project.setActivateFlag(AppConstants.ACTIVE_FLAG);
					project.setProjectUpdatedDate(new Date());
					project.setProjectDueDate(projectDto.getProjectDueDate());
					project.setProjectStartDate(projectDto.getProjectStartDate());
					project.setProjectStatus(projectDto.getProjectStatus());
					if(projectDto.getComment()!=null)
					{
						project.setComment(projectDto.getComment());
					}
					if(projectDto.getReply()!=null)
					{
						project.setReply(projectDto.getReply());
					}
					projectDao.updateProject(project);
				
					dto.setSuccessMsg("project updated");
					dto.setDataObj(project);
					dto.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
					
				} catch (Exception e) {
					// TODO: handle exception
					dto.setErrorMsg("project not updated");
					dto.setDataObj(e.getMessage());
					dto.setErrorCode(411);
					e.printStackTrace();
					logger.error("update proj,",e);
				}
			return dto;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#getProjectWiseMember(java.lang.Integer)
	 */
	@Override
	public ResponseDTO getProjectWiseMember(Integer projId) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#getProjectList(java.lang.Integer)
	 */
	@Override
	@Transactional
	public ResponseDTO getProjectList(Integer projId) throws Exception {
		// TODO Auto-generated method stub
		ResponseDTO resSto=new ResponseDTO();
		resSto.setDataObj(projectDao.getProjectList(projId,null,null,null));
		resSto.setSuccessMsg("project list sent..");
		resSto.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
		
		return resSto;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#projectTeamMapping(java.lang.Integer)
	 */
	@Override
	public ResponseDTO projectTeamMapping(Integer projId) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ProjectService#deleteProject(com.gomap.performance.organisastion.dto.ProjectDto)
	 */
	@Override
	@Transactional
	public ResponseDTO deleteProject(ProjectDto projectDto) throws Exception {
		logger.debug("start  deleteProject for projectId=" + projectDto.getProjectId());
		ResponseDTO responseDTO = new ResponseDTO();
		try {
			EmProject emProject = new EmProject();
			if (projectDto == null && projectDto.getProjectId() == null) {
				responseDTO.setErrorCode(411);
				responseDTO.setErrorMsg("Project parameter can not be null");
			} else {
				
				List<EmProject> projList = projectDao.getProjectList(projectDto.getProjectId(),null,null,null);
						
				if (projList.isEmpty()) {
					responseDTO.setErrorCode(412);
					responseDTO.setErrorMsg(" data is not availabe in system");
				} else {
					 emProject = projList.get(0);
				
					 emProject.setActivateFlag(AppConstants.IN_ACTIVE_FLAG);
					 emProject.setProjectUpdatedDate(new Date());
					 projectDao.updateProject(emProject);
						responseDTO.setDataObj(emProject);
						responseDTO.setSuccessMsg("Data deleted..");
						responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
					

				}

			}

			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error(" Error while deleting deleteTeam");
		}
		// TODO Auto-generated method stub
		return responseDTO;

	}

}
