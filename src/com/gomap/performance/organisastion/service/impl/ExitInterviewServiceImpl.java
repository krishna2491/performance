/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.enums.ErrorCodeEnums;
import com.gomap.performance.organisastion.dao.ExitInterviewDao;
import com.gomap.performance.organisastion.dto.ExitInterviewParamDto;
import com.gomap.performance.organisastion.dto.ExitInterviewParamRltDto;
import com.gomap.performance.organisastion.dto.ExitInterviewResponseDto;
import com.gomap.performance.organisastion.dto.ExitInterviewResponseMpgDto;
import com.gomap.performance.organisastion.dto.ResponseDTO;
import com.gomap.performance.organisastion.model.ExitInterviewParam;
import com.gomap.performance.organisastion.model.ExitInterviewParamRlt;
import com.gomap.performance.organisastion.model.ExitInterviewResponse;
import com.gomap.performance.organisastion.model.ExitInterviewResponseMpg;
import com.gomap.performance.organisastion.service.ExitInterviewService;

/**
 * @author Fujitsu
 *
 */
@Service
public class ExitInterviewServiceImpl implements ExitInterviewService{
	private static final Logger logger = LoggerFactory.getLogger(ExitInterviewServiceImpl.class);

	@Autowired
	private ExitInterviewDao exitInterviewDao;
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#createExitInterviewParameter(com.gomap.performance.organisastion.dto.ExitInterviewParamDto)
	 */
	@Override
	@Transactional
	public ResponseDTO createExitInterviewParameter(ExitInterviewParamDto exitInterviewParamDto) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start createExitInterviewParameter");
		ResponseDTO responseDTO=new ResponseDTO();
		ExitInterviewParamRlt paramRlt=null;
		try {
			if(exitInterviewParamDto.getParamName()!=null)
			{
				ExitInterviewParam interviewParam=new ExitInterviewParam();
				interviewParam.setParamName(exitInterviewParamDto.getParamName());
				interviewParam.setParamType(exitInterviewParamDto.getParamType());
				interviewParam.setActivateFlag(AppConstants.ACTIVE_FLAG);
				interviewParam.setCreatedBy(exitInterviewParamDto.getCreatedBy());
				interviewParam.setCreatedDate(new Date());
				exitInterviewDao.addExitInterviewParameter(interviewParam);
				if(interviewParam.getParamType()!=AppConstants.TEXT_PARAM)
				{
					if(exitInterviewParamDto.getParaRtlData()!=null 
							&& !exitInterviewParamDto.getParaRtlData().isEmpty())
					{
						for(ExitInterviewParamRltDto paramRltDto:exitInterviewParamDto.getParaRtlData())
						{
							paramRlt=new ExitInterviewParamRlt();
							if(paramRltDto.getParamName()!=null)
							{
								paramRlt.setParamName(paramRltDto.getParamName());
							}
							if(interviewParam.getParamId()!=null)
							{
								paramRlt.setParamId(interviewParam.getParamId());
							}
							paramRlt.setActivateFlag(AppConstants.ACTIVE_FLAG);
							paramRlt.setCreatedBy(interviewParam.getCreatedBy());
							paramRlt.setCreatedDate(new Date());
							exitInterviewDao.addParamRlt(paramRlt);
						}
					}
				}
				responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
				responseDTO.setSuccessMsg("Parameter created successfully");
				responseDTO.setDataObj(interviewParam);
			}else
			{
				responseDTO.setErrorCode(411);
				responseDTO.setErrorMsg("Parameter name is mandatory");
				responseDTO.setDataObj(null);
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setDataObj(e);
			logger.error("Error in createExitInterviewParameter",e);
		}
		return responseDTO;
	}
	@Override
	@Transactional
	public ResponseDTO getInterviewParam(ExitInterviewParamDto exitInterviewParamDto) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start getInterviewParam");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			List<ExitInterviewParamDto> ExitInterviewParamList=null;
			ExitInterviewParam interviewParam=new ExitInterviewParam();
			
			if(exitInterviewParamDto.getParamName()!=null)
			{
				interviewParam.setParamName(exitInterviewParamDto.getParamName());
			}if(exitInterviewParamDto.getParamType()!=null)
			{
				interviewParam.setParamType(exitInterviewParamDto.getParamType());
			}
				List<ExitInterviewParam> interviewParams=exitInterviewDao.getExitInterviewParameter(interviewParam);
				if(interviewParams!=null && !interviewParams.isEmpty())
				{
					ExitInterviewParamList=new ArrayList<ExitInterviewParamDto>();
					ExitInterviewParamDto dtoObj=null;
					for(ExitInterviewParam paramObj:interviewParams)
					{
						dtoObj=new ExitInterviewParamDto();
						dtoObj.setParamName(paramObj.getParamName());
						dtoObj.setParamType(paramObj.getParamType());
						dtoObj.setActivateFlag(paramObj.getActivateFlag());
						dtoObj.setCreatedBy(paramObj.getCreatedBy());
						dtoObj.setCreatedDate(paramObj.getCreatedDate());
						dtoObj.setUpdatedDate(paramObj.getUpdatedDate());
						dtoObj.setParamId(paramObj.getParamId());
						if(paramObj.getParamType()!=AppConstants.TEXT_PARAM)
						{
							List<ExitInterviewParamRlt> rltList=exitInterviewDao.getParamRlt(dtoObj.getParamId(),null);
							if(rltList!=null && !rltList.isEmpty())
							{
								List<ExitInterviewParamRltDto> paramRltDtoList=new ArrayList<ExitInterviewParamRltDto>();
								ExitInterviewParamRltDto rltDtObj=null;
								for(ExitInterviewParamRlt rltDB:rltList)
								{
									 rltDtObj=new ExitInterviewParamRltDto();
									 rltDtObj.setParamName(rltDB.getParamName());
									 rltDtObj.setParamId(rltDB.getParamId());
									 rltDtObj.setParamRltId(rltDB.getParamRltId());
									 rltDtObj.setActivateFlag(rltDB.getActivateFlag());
									 rltDtObj.setCreatedBy(rltDB.getCreatedBy());
									 rltDtObj.setCreatedDate(rltDB.getCreatedDate());
									 rltDtObj.setUpdatedDate(rltDB.getUpdatedDate());
									 
									 paramRltDtoList.add(rltDtObj);
								}
								dtoObj.setParaRtlData(paramRltDtoList);
							}
						}
						ExitInterviewParamList.add(dtoObj);
					}
					
					responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
					responseDTO.setSuccessMsg("Parameter sent successfully");
					responseDTO.setDataObj(ExitInterviewParamList);
				}else
				{
					responseDTO.setErrorCode(411);
					responseDTO.setErrorMsg("No record found");
					responseDTO.setDataObj(null);
				}
				
				
			
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setDataObj(e);
			logger.error("Error in createExitInterviewParameter",e);
		}
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#updateExitInterviewParameter(com.gomap.performance.organisastion.dto.ExitInterviewParamDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateExitInterviewParameter(ExitInterviewParamDto exitInterviewParamDto) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start createExitInterviewParameter");
		ResponseDTO responseDTO=new ResponseDTO();
		ExitInterviewParamRlt paramRlt=null;
		try {
			if(exitInterviewParamDto.getParamId()!=null)
			{
				ExitInterviewParam interviewParam=new ExitInterviewParam();
				interviewParam.setParamId(exitInterviewParamDto.getParamId());
				List<ExitInterviewParam> dbParamList=exitInterviewDao.getExitInterviewParameter(interviewParam);
				if(dbParamList!=null && !dbParamList.isEmpty())
				{
					interviewParam=dbParamList.get(0);
					if(exitInterviewParamDto.getParamName()!=null)
					{
						interviewParam.setParamName(exitInterviewParamDto.getParamName());
					}if(exitInterviewParamDto.getParamType()!=null)
					{
						interviewParam.setParamType(exitInterviewParamDto.getParamType());
					}if(exitInterviewParamDto.getActivateFlag()!=null)
					{
						interviewParam.setActivateFlag(exitInterviewParamDto.getActivateFlag());
					}
					
					
					
				
					interviewParam.setUpdatedDate(new Date());
					exitInterviewDao.updateExitInterviewParameter(interviewParam);
				}
				
				if(interviewParam.getParamType()!=AppConstants.TEXT_PARAM)
				{
					if(exitInterviewParamDto.getParaRtlData()!=null 
							&& !exitInterviewParamDto.getParaRtlData().isEmpty())
					{
						for(ExitInterviewParamRltDto paramRltDto:exitInterviewParamDto.getParaRtlData())
						{
							paramRlt=new ExitInterviewParamRlt();
							if(paramRltDto.getParamRltId()!=null)
							{
								List<ExitInterviewParamRlt> dbParamRltList =exitInterviewDao.getParamRlt(null,paramRltDto.getParamRltId());
								if(dbParamRltList!=null  && !dbParamRltList.isEmpty())
								{
									paramRlt=dbParamRltList.get(0);
									if(paramRltDto.getParamName()!=null)
									{
										paramRlt.setParamName(paramRltDto.getParamName());
									}
									if(paramRltDto.getActivateFlag()!=null)
									{
										paramRlt.setActivateFlag(paramRltDto.getActivateFlag());
									}
									paramRlt.setUpdatedDate(new Date());
									exitInterviewDao.updateParamRlt(paramRlt);
								}
							}else {
								
								if(paramRltDto.getParamName()!=null)
								{
									paramRlt.setParamName(paramRltDto.getParamName());
								}
								if(interviewParam.getParamId()!=null)
								{
									paramRlt.setParamId(interviewParam.getParamId());
								}
								paramRlt.setActivateFlag(AppConstants.ACTIVE_FLAG);
								paramRlt.setCreatedBy(interviewParam.getCreatedBy());
								paramRlt.setCreatedDate(new Date());
								exitInterviewDao.addParamRlt(paramRlt);
							}
							
							
						}
					}
				}
				responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
				responseDTO.setSuccessMsg("Parameter updated successfully");
				responseDTO.setDataObj(exitInterviewParamDto);
			}else
			{
				responseDTO.setErrorCode(411);
				responseDTO.setErrorMsg("Parameter id is mandatory");
				responseDTO.setDataObj(null);
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setDataObj(e);
			logger.error("Error in createExitInterviewParameter",e);
		}
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#storeInterviewResponse(com.gomap.performance.organisastion.dto.ExitInterviewResponseDto)
	 */
	@Override
	@Transactional
	public ResponseDTO storeInterviewResponse(ExitInterviewResponseDto exitInterviewResponseDto) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start storeInterviewResponse");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			ExitInterviewResponse interviewResponse=new ExitInterviewResponse();
			if(exitInterviewResponseDto.getEmployeeId()!=null && exitInterviewResponseDto.getInterviewResponseParam()!=null)
			{
				interviewResponse.setEmployeeId(exitInterviewResponseDto.getEmployeeId());
				interviewResponse.setActivateFlag(AppConstants.ACTIVE_FLAG);
				interviewResponse.setCreatedDate(new Date());
				
				exitInterviewDao.storeInterviewResponse(interviewResponse);
				if(!exitInterviewResponseDto.getInterviewResponseParam().isEmpty() && interviewResponse.getResponseId()!=null)
				{
					ExitInterviewResponseMpg responseMpg=null;
					for(ExitInterviewResponseMpgDto responseMpgDto:exitInterviewResponseDto.getInterviewResponseParam())
					{
						responseMpg=new ExitInterviewResponseMpg();
						responseMpg.setActivateFlag(AppConstants.ACTIVE_FLAG);
						responseMpg.setCreatedDate(new Date());
						responseMpg.setResponseId(interviewResponse.getResponseId());
						responseMpg.setParamId(responseMpgDto.getParamId());
						if(responseMpgDto.getRating()!=null)
						{
							responseMpg.setRating(responseMpgDto.getRating());	
						}if(responseMpgDto.getComment()!=null)
						{
							responseMpg.setComment(responseMpgDto.getComment());
						}
						
						if(responseMpgDto.getParamRltId()!=null)
						{
							responseMpg.setParamRltId(responseMpgDto.getParamRltId());
						}
						responseMpg.setResponseId(interviewResponse.getResponseId());
						
						exitInterviewDao.storeInterviewResponseMpg(responseMpg);
					}
				}
				responseDTO.setDataObj(exitInterviewResponseDto);
				responseDTO.setSuccessMsg("Exit interview details stored");
				responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			
			}
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
		}
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#updateInterviewResponse(com.gomap.performance.organisastion.dto.ExitInterviewResponseDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateInterviewResponse(ExitInterviewResponseDto exitInterviewResponseDto) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start storeInterviewResponse");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			ExitInterviewResponse interviewResponse=new ExitInterviewResponse();
			if(exitInterviewResponseDto.getResponseId()!=null)
			{
				interviewResponse.setResponseId(exitInterviewResponseDto.getResponseId());
				interviewResponse=exitInterviewDao.getInterviewResponse(interviewResponse);
				if(interviewResponse!=null)
				{
					if(exitInterviewResponseDto.getEmployeeId()!=null)
					{
						interviewResponse.setEmployeeId(exitInterviewResponseDto.getEmployeeId());
					}
					if(exitInterviewResponseDto.getActivateFlag()!=null)
					{
						interviewResponse.setActivateFlag(exitInterviewResponseDto.getActivateFlag());
					}
					interviewResponse.setUpdatedDate(new Date());
				
					exitInterviewDao.updateInterviewResponse(interviewResponse);
					
					ExitInterviewResponseMpg interviewResponseMpg=new ExitInterviewResponseMpg();
					
					if(exitInterviewResponseDto.getInterviewResponseParam()!=null && !exitInterviewResponseDto.getInterviewResponseParam().isEmpty())
					{
						for(ExitInterviewResponseMpgDto exitInterviewResponseMpgDto:exitInterviewResponseDto.getInterviewResponseParam())
						{
							interviewResponseMpg=new ExitInterviewResponseMpg();
							if(exitInterviewResponseMpgDto.getResponseMpgId()!=null)
							{
								interviewResponseMpg.setResponseMpgId(exitInterviewResponseMpgDto.getResponseMpgId());
								interviewResponseMpg=exitInterviewDao.getInterviewResponseMpg(interviewResponseMpg);
								if(interviewResponseMpg!=null)
								{
									if(exitInterviewResponseMpgDto.getComment()!=null)
									{
										interviewResponseMpg.setComment(exitInterviewResponseMpgDto.getComment());
									}if(exitInterviewResponseMpgDto.getRating()!=null)
									{
										interviewResponseMpg.setRating(exitInterviewResponseMpgDto.getRating());
									}
									if(exitInterviewResponseMpgDto.getParamRltId()!=null)
									{
										interviewResponseMpg.setParamRltId(exitInterviewResponseMpgDto.getParamRltId());
									}
									
									interviewResponseMpg.setUpdatedDate(new Date());
									exitInterviewDao.updateInterviewResponseMpg(interviewResponseMpg);
								}
							}
						}
						
					}
					
				}
				responseDTO.setDataObj(exitInterviewResponseDto);
				responseDTO.setSuccessMsg("Record updated");
				responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
	
			}else
			{
				responseDTO.setDataObj(null);
				responseDTO.setErrorMsg("Please enter response id");
				responseDTO.setErrorCode(411);
			}
				
				
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
		}
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#getInterviewResponse()
	 */
	@Override
	@Transactional
	public ResponseDTO getInterviewResponse() throws Exception {
		// TODO Auto-generated method stub
		logger.info("start getInterviewResponse");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			
			responseDTO.setDataObj(exitInterviewDao.getInterviewResponseView());
			responseDTO.setSuccessMsg("Employee response sent");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
			logger.error("Error in getInterviewResponse",e);
		}
		return responseDTO;
	}
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.ExitInterviewService#getInterviewResponseDetail(java.lang.Integer)
	 */
	@Override
	@Transactional
	public ResponseDTO getInterviewResponseDetail(Long responseId) throws Exception {
		// TODO Auto-generated method stub
		logger.info("start getInterviewResponseDetail");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			if(responseId!=null)
			{
				ExitInterviewResponse interviewResponse=new ExitInterviewResponse();
				interviewResponse.setResponseId(responseId);
				 interviewResponse=exitInterviewDao.getInterviewResponse(interviewResponse);
				 ExitInterviewResponseDto dto=new ExitInterviewResponseDto();
				 List<ExitInterviewResponseMpgDto> dtoMpgList=new ArrayList<ExitInterviewResponseMpgDto>();
				 List<ExitInterviewResponseMpgDto> rltMpgList=new ArrayList<ExitInterviewResponseMpgDto>();
				 if(interviewResponse!=null)
				 {
					 ExitInterviewResponseMpg  mpgObj=new ExitInterviewResponseMpg();
					 mpgObj.setResponseId(interviewResponse.getResponseId());
					 List<ExitInterviewResponseMpg> mpgList=exitInterviewDao.getInterviewResponseMpgList(mpgObj);
					 if(mpgList!=null && !mpgList.isEmpty())
					 {
						 dto.setResponseId(interviewResponse.getResponseId());
						 dto.setEmployeeId(interviewResponse.getEmployeeId());
						
						 ExitInterviewResponseMpgDto  dtoMpgObj=null;
						 ExitInterviewResponseMpgDto  rltDtoMpgObj=null;
						 ExitInterviewParam param=null;
						 Long currentParamID=0L;
						 Long prevId=0L;
						 Long mpgId=0L;
						 for(ExitInterviewResponseMpg  dbMpg:mpgList)
						 {
							 currentParamID=dbMpg.getParamId();
							 mpgId=dbMpg.getResponseMpgId();
							if(prevId==0L || !prevId.equals(currentParamID))
							{
								System.out.println("hello");
								 dtoMpgObj=new  ExitInterviewResponseMpgDto();
								 dtoMpgObj.setComment(dbMpg.getComment());
								 dtoMpgObj.setParamId(dbMpg.getParamId());
								 dtoMpgObj.setResponseMpgId(dbMpg.getResponseMpgId());
								 dtoMpgObj.setCreatedDate(dbMpg.getCreatedDate());
								 dtoMpgObj.setRating(dbMpg.getRating());
								 dtoMpgObj.setResponseId(dbMpg.getResponseId());
								 param=new ExitInterviewParam();
								 param.setParamId(dbMpg.getParamId());
								 
								 dtoMpgObj.setParamRltId(dbMpg.getParamRltId());
								 List<ExitInterviewParam> paramList=exitInterviewDao.getExitInterviewParameter(param);
								 if(paramList!=null && !paramList.isEmpty())
								 {
									// for()
									 param=paramList.get(0);
									// if(param.getParamType())
									 dtoMpgObj.setParamName(param.getParamName());
									 dtoMpgObj.setParamType(param.getParamType());
									
									 mpgObj.setParamId(param.getParamId());
									if(dbMpg.getParamRltId()!=null) {
									 List<ExitInterviewResponseMpg> mpgParamRltList=exitInterviewDao.getInterviewResponseMpgList(mpgObj);
									 if(mpgParamRltList!=null && !mpgParamRltList.isEmpty())
									 {
										 rltMpgList=new ArrayList<ExitInterviewResponseMpgDto>();
										 for(ExitInterviewResponseMpg  dbMpgRlt:mpgParamRltList)
										 {
											 rltDtoMpgObj=new ExitInterviewResponseMpgDto();
											 
											 rltDtoMpgObj.setComment(dbMpgRlt.getComment());
											 rltDtoMpgObj.setParamId(dbMpgRlt.getParamId());
											 rltDtoMpgObj.setResponseMpgId(dbMpgRlt.getResponseMpgId());
											 rltDtoMpgObj.setCreatedDate(dbMpgRlt.getCreatedDate());
											 rltDtoMpgObj.setRating(dbMpgRlt.getRating());
											 rltDtoMpgObj.setResponseId(dbMpg.getResponseId());
											 param=new ExitInterviewParam();
											 param.setParamId(dbMpg.getParamId());
											 List<ExitInterviewParamRlt> paramRltList=exitInterviewDao.getParamRlt(null,dbMpgRlt.getParamRltId());
											 if(paramRltList!=null && !paramRltList.isEmpty())
											 {
												
												 rltDtoMpgObj.setParamName( paramRltList.get(0).getParamName());
											 }
											 
											 rltDtoMpgObj.setParamRltId(dbMpg.getParamRltId());
											 rltMpgList.add(rltDtoMpgObj);
										 }
										 dtoMpgObj.setRlMpgs(rltMpgList);
									 }
									 }
									 dtoMpgList.add(dtoMpgObj); 
								 }
								 prevId=currentParamID;
							}else
							{
								continue;
							}
							
						 }
					 }
					 
				 }
				 responseDTO.setDataObj(dtoMpgList);
				 responseDTO.setSuccessMsg("Response details sent");
				 responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			}else {
				 responseDTO.setDataObj(null);
				 responseDTO.setErrorMsg("Response id is mandatory");
				 responseDTO.setErrorCode(411);
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			 responseDTO.setDataObj(e);
			 responseDTO.setErrorMsg(e.getMessage());
			 responseDTO.setErrorCode(411);
			logger.error("Error in getInterviewResponseDetail",e);
		}
		
		return responseDTO;
	}


}
