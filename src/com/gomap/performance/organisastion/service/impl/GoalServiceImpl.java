/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.organisastion.service.impl;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.gomap.performance.master.constant.AppConstants;

import com.gomap.performance.organisastion.dao.GoalDao;
import com.gomap.performance.organisastion.dto.EmGoalDto;
import com.gomap.performance.organisastion.dto.ResponseDTO;
import com.gomap.performance.organisastion.enumorg.ErrorCodeEnums;
import com.gomap.performance.organisastion.model.EmGoal;
import com.gomap.performance.organisastion.service.GoalService;

/**
 * @author krishnakant.bairagi
 *
 */
@Service
public class GoalServiceImpl implements GoalService {
	private static final Logger logger = LoggerFactory.getLogger(GoalServiceImpl.class);

	@Autowired
	private GoalDao goalDao;
	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.GoalService#createGoal(com.gomap.performance.organisastion.dto.EmGoalDto)
	 */
	@Override
	@Transactional
	public ResponseDTO createGoal(EmGoalDto emGoalDto) throws Exception {
		ResponseDTO responseDTO=new ResponseDTO();
		logger.info("Goal Creation started");
		try {
			EmGoal emGoal=new EmGoal();
			emGoal.setActivateFlag(AppConstants.ACTIVE_FLAG);
			if(emGoalDto.getConfirmNote()!=null)
			{
				emGoal.setConfirmNote(emGoalDto.getConfirmNote());
			}
			if(emGoalDto.getEmployeeId()!=null)
			{
				emGoal.setEmployeeId(emGoalDto.getEmployeeId());
			}
			if(emGoalDto.getDepartmentId()!=null)
			{
				emGoal.setDepartmentId(emGoalDto.getDepartmentId());
			}
			if(emGoalDto.getGoalApprovedStatus()!=null)
			{
				emGoal.setGoalApprovedStatus(emGoalDto.getGoalApprovedStatus());
			}
			if(emGoalDto.getGoalAttachment()!=null)
			{
				emGoal.setGoalAttachment(emGoalDto.getGoalAttachment());
			}
			if(emGoalDto.getGoalDescription()!=null)
			{
				emGoal.setGoalDescription(emGoalDto.getGoalDescription());
			}
			if(emGoalDto.getGoalEndDate()!=null)
			{
				emGoal.setGoalEndDate(emGoalDto.getGoalEndDate());
			}
			if(emGoalDto.getGoalHeading()!=null)
			{
				emGoal.setGoalHeading(emGoalDto.getGoalHeading());
			}
			if(emGoalDto.getGoalStartDate()!=null)
			{
				emGoal.setGoalStartDate(emGoalDto.getGoalStartDate());
			}
			if(emGoalDto.getTaskId()!=null)
			{
				emGoal.setTaskId(emGoalDto.getTaskId());
			}
			if(emGoalDto.getGoalStatus()!=null)
			{
				emGoal.setGoalStatus(emGoalDto.getGoalStatus());
			}
			emGoal.setGoalCreatedDate(new Date());
			
			goalDao.createGoal(emGoal);
			responseDTO.setDataObj(emGoal);
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			responseDTO.setSuccessMsg("Goal successfully created");
			logger.info("Goal creation done---");
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error("Getting Error while creating Goal");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.GoalService#updateGoal(com.gomap.performance.organisastion.dto.EmGoalDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateGoal(EmGoalDto emGoalDto) throws Exception {

		ResponseDTO responseDTO=new ResponseDTO();
		logger.info("updateGoal started");
		try {
			if(emGoalDto!=null && emGoalDto.getGoalId()!=null)
			{
				EmGoal emGoal=new EmGoal();
				emGoal.setGoalId(emGoalDto.getGoalId());
				List<EmGoal> GoalList=goalDao.getGoal(emGoal);
				if(GoalList.isEmpty()) {
					responseDTO.setDataObj(null);
					responseDTO.setErrorCode(411);
					responseDTO.setErrorMsg("Goal details not avaialbe in system");
				}else {
					 emGoal=GoalList.get(0);
					 if(emGoalDto.getConfirmNote()!=null)
						{
							emGoal.setConfirmNote(emGoalDto.getConfirmNote());
						}
						if(emGoalDto.getEmployeeId()!=null)
						{
							emGoal.setEmployeeId(emGoalDto.getEmployeeId());
						}
						if(emGoalDto.getDepartmentId()!=null)
						{
							emGoal.setDepartmentId(emGoalDto.getDepartmentId());
						}
						if(emGoalDto.getGoalApprovedStatus()!=null)
						{
							emGoal.setGoalApprovedStatus(emGoalDto.getGoalApprovedStatus());
						}
						if(emGoalDto.getGoalAttachment()!=null)
						{
							emGoal.setGoalAttachment(emGoalDto.getGoalAttachment());
						}
						if(emGoalDto.getGoalDescription()!=null)
						{
							emGoal.setGoalDescription(emGoalDto.getGoalDescription());
						}
						if(emGoalDto.getGoalEndDate()!=null)
						{
							emGoal.setGoalEndDate(emGoalDto.getGoalEndDate());
						}
						if(emGoalDto.getGoalHeading()!=null)
						{
							emGoal.setGoalHeading(emGoalDto.getGoalHeading());
						}
						if(emGoalDto.getGoalStartDate()!=null)
						{
							emGoal.setGoalStartDate(emGoalDto.getGoalStartDate());
						}
						if(emGoalDto.getTaskId()!=null)
						{
							emGoal.setTaskId(emGoalDto.getTaskId());
						}
						if(emGoalDto.getGoalStatus()!=null)
						{
							emGoal.setGoalStatus(emGoalDto.getGoalStatus());
						}
									emGoal.setGoalUpdatedDate(new Date());
							
							goalDao.updateGoal(emGoal);
							responseDTO.setDataObj(emGoal);
							responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
							responseDTO.setSuccessMsg("Goal successfully created");
							logger.info("Goal creation done---");
						
				}
					
						
			}
			else
			{
				responseDTO.setDataObj(null);
				responseDTO.setErrorCode(411);
				responseDTO.setErrorMsg("Goal id is mandatory");
				
			}
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error("Getting Error while updating Goal");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.GoalService#getGoal(com.gomap.performance.organisastion.dto.EmGoalDto)
	 */
	@Override
	@Transactional
	public ResponseDTO getGoal(EmGoalDto emGoalDto) throws Exception {


		ResponseDTO responseDTO=new ResponseDTO();
		logger.info("getGoal started");
		try {
			EmGoal emGoal=new EmGoal();
			if(emGoalDto.getGoalId()!=null)
			{
				emGoal.setGoalId(emGoalDto.getGoalId());
			}
			if(emGoalDto.getConfirmNote()!=null)
			{
				emGoal.setConfirmNote(emGoalDto.getConfirmNote());
			}
			if(emGoalDto.getEmployeeId()!=null)
			{
				emGoal.setEmployeeId(emGoalDto.getEmployeeId());
			}
			if(emGoalDto.getDepartmentId()!=null)
			{
				emGoal.setDepartmentId(emGoalDto.getDepartmentId());
			}
			if(emGoalDto.getGoalApprovedStatus()!=null)
			{
				emGoal.setGoalApprovedStatus(emGoalDto.getGoalApprovedStatus());
			}
			
			
			if(emGoalDto.getGoalEndDate()!=null)
			{
				emGoal.setGoalEndDate(emGoalDto.getGoalEndDate());
			}
			
			if(emGoalDto.getGoalStartDate()!=null)
			{
				emGoal.setGoalStartDate(emGoalDto.getGoalStartDate());
			}
			if(emGoalDto.getTaskId()!=null)
			{
				emGoal.setTaskId(emGoalDto.getTaskId());
			}
			if(emGoalDto.getGoalStatus()!=null)
			{
				emGoal.setGoalStatus(emGoalDto.getGoalStatus());
			}
			
			
			List<EmGoal> goalList=goalDao.getGoal(emGoal);
			responseDTO.setDataObj(goalList);
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			responseDTO.setSuccessMsg("Goal list sent successfully ");
			logger.info("Goal list done---");
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setErrorCode(411);
			responseDTO.setErrorMsg(e.getMessage());
			logger.error("Getting Error while retrieving Goal");
		}
		// TODO Auto-generated method stub
		return responseDTO;
	
		
	
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.organisastion.service.GoalService#deleteGoal(java.lang.Integer, java.lang.Integer, java.lang.Integer)
	 */
	@Override
	public ResponseDTO deleteGoal(Integer goalId, Integer empId, Integer projetId) throws Exception {
		// TODO Auto-generated method stub
		
		return null;
	}

}
