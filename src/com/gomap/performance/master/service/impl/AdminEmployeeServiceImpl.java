/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.master.service.impl;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.dao.AdminEmployeeDao;
import com.gomap.performance.master.dto.EmployeeMasterDto;
import com.gomap.performance.master.dto.ResponseDTO;
import com.gomap.performance.master.model.EmployeeMaster;
import com.gomap.performance.master.service.AdminEmployeeService;
import com.gomap.performance.organisastion.enumorg.ErrorCodeEnums;

/**
 * @author krishnakant.bairagi
 *
 */
@Service
public class AdminEmployeeServiceImpl implements AdminEmployeeService {

	private static final Logger logger = LoggerFactory.getLogger(AdminEmployeeServiceImpl.class);
	
	@Autowired
	private AdminEmployeeDao adminEmployeeDao;
	
	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.AdminEmployeeService#addEmployee(com.gomap.performance.master.dto.EmployeeMasterDto)
	 */
	@Override
	@Transactional
	public ResponseDTO addEmployee(EmployeeMasterDto employeeDto) {
		// TODO Auto-generated method stub
		logger.info("addEmployee.....");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			EmployeeMaster employeeMaster=new EmployeeMaster();
			if(employeeDto.getCompanyId()!=null)
			{
			employeeMaster.setCompanyId(employeeDto.getCompanyId());	
			}
			if(employeeDto.getEmail()!=null)
			{
			employeeMaster.setEmail(employeeDto.getEmail());	
			}
			if(employeeDto.getfName()!=null)
			{
			employeeMaster.setfName(employeeDto.getfName());	
			}
			if(employeeDto.getmName()!=null)
			{
			employeeMaster.setmName(employeeDto.getmName());	
			}
			if(employeeDto.getMobileNo()!=null)
			{
			employeeMaster.setMobileNo(employeeDto.getMobileNo());	
			}
			if(employeeDto.getPassword()!=null)
			{
			employeeMaster.setPassword(employeeDto.getPassword());	
			}
			
			employeeMaster.setCreatedDate(new Date());
			employeeMaster.setActivateFlag(AppConstants.ACTIVE_FLAG);
			
			adminEmployeeDao.storeEmployeeData(employeeMaster);
			
			responseDTO.setDataObj(employeeMaster);
			responseDTO.setSuccessMsg("Employee Added");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
				} catch (Exception e) {
					logger.error("Errro whhile adding employee");
					responseDTO.setDataObj(e);
					responseDTO.setErrorMsg(e.getMessage());
					responseDTO.setErrorCode(411);
			// TODO: handle exception
		}
		return responseDTO;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.AdminEmployeeService#updateEmployee(com.gomap.performance.master.dto.EmployeeMasterDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateEmployee(EmployeeMasterDto employeeDto) {

		// TODO Auto-generated method stub
		logger.info("updateEmployee.....");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			
			if(employeeDto.getEmployeeId()!=null)
			{
				EmployeeMaster employeeMaster=new EmployeeMaster();
				employeeMaster.setEmployeeId(employeeDto.getEmployeeId());
				List<EmployeeMaster> employeeList=adminEmployeeDao.getAdminEmployee(employeeMaster);
				
				if(employeeList!=null && !employeeList.isEmpty())
				{
					 employeeMaster=employeeList.get(0);	
					if(employeeDto.getCompanyId()!=null)
					{
					employeeMaster.setCompanyId(employeeDto.getCompanyId());	
					}
					if(employeeDto.getEmail()!=null)
					{
					employeeMaster.setEmail(employeeDto.getEmail());	
					}
					if(employeeDto.getfName()!=null)
					{
					employeeMaster.setfName(employeeDto.getfName());	
					}
					if(employeeDto.getmName()!=null)
					{
					employeeMaster.setmName(employeeDto.getmName());	
					}
					if(employeeDto.getMobileNo()!=null)
					{
					employeeMaster.setMobileNo(employeeDto.getMobileNo());	
					}
					if(employeeDto.getPassword()!=null)
					{
					employeeMaster.setPassword(employeeDto.getPassword());	
					}
					
					employeeMaster.setUpdatedDate(new Date());
					if(employeeDto.getActivateFlag()!=null)
					{
						employeeMaster.setActivateFlag(employeeDto.getActivateFlag());
							
					}
					adminEmployeeDao.updateEmployee(employeeMaster);
					
					responseDTO.setDataObj(employeeMaster);
					responseDTO.setSuccessMsg("Employee updated");
					responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
					
				}else {
					responseDTO.setDataObj(employeeDto);
					responseDTO.setErrorMsg("Employee Details not available in System");
					responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
					
				}
				
				
					
					
			}else
			{
				responseDTO.setDataObj(employeeDto);
				responseDTO.setErrorMsg("Employee id can not be blank");
				responseDTO.setErrorCode(411);
				
			}
				} catch (Exception e) {
					logger.error("Errro whhile adding employee");
					responseDTO.setDataObj(e);
					responseDTO.setErrorMsg(e.getMessage());
					responseDTO.setErrorCode(411);
			// TODO: handle exception
		}
		return responseDTO;
	
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.AdminEmployeeService#employeeRoleMapping(com.gomap.performance.master.dto.EmployeeMasterDto)
	 */
	@Override
	public ResponseDTO employeeRoleMapping(EmployeeMasterDto employeeDto) {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.AdminEmployeeService#employeeDepratmentMapping(com.gomap.performance.master.dto.EmployeeMasterDto)
	 */
	@Override
	public ResponseDTO employeeDepratmentMapping(EmployeeMasterDto employeeDto) {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.AdminEmployeeService#getAdminEmployeeDetails(com.gomap.performance.master.dto.EmployeeMasterDto)
	 */
	@Override
	@Transactional
	public ResponseDTO getAdminEmployeeDetails(EmployeeMasterDto employeeDto) {

		// TODO Auto-generated method stub
		logger.info("getAdminEmployeeDetails");
		ResponseDTO responseDTO=new ResponseDTO();
		try {
			EmployeeMaster employeeMaster=new EmployeeMaster();
			if(employeeDto.getCompanyId()!=null)
			{
			employeeMaster.setCompanyId(employeeDto.getCompanyId());	
			}
			if(employeeDto.getEmployeeId()!=null)
			{
			employeeMaster.setEmployeeId(employeeDto.getEmployeeId());	
			}
			if(employeeDto.getfName()!=null)
			{
			employeeMaster.setfName(employeeDto.getfName());	
			}
			if(employeeDto.getmName()!=null)
			{
			employeeMaster.setmName(employeeDto.getmName());	
			}
			if(employeeDto.getMobileNo()!=null)
			{
			employeeMaster.setMobileNo(employeeDto.getMobileNo());	
			}
			
			
			
			List<EmployeeMaster> adminEmplList=adminEmployeeDao.getAdminEmployee(employeeMaster);
			
			
			responseDTO.setDataObj(adminEmplList);
			responseDTO.setSuccessMsg("Employee list sent successfully");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
				} catch (Exception e) {
					logger.error("Errro whhile adding employee");
					responseDTO.setDataObj(e);
					responseDTO.setErrorMsg(e.getMessage());
					responseDTO.setErrorCode(411);
			// TODO: handle exception
		}
		return responseDTO;
	
	}

}
