/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.master.service.impl;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.dao.CompanyDao;
import com.gomap.performance.master.dto.CompanyMasterDto;
import com.gomap.performance.master.dto.ResponseDTO;
import com.gomap.performance.master.model.CompanyMaster;
import com.gomap.performance.master.service.CompanyService;
import com.gomap.performance.organisastion.enumorg.ErrorCodeEnums;

/**
 * @author krishnakant.bairagi
 *
 */
@Service
public class CompanyMasterServiceImpl implements CompanyService {

	private static final Logger logger = LoggerFactory.getLogger(CompanyMasterServiceImpl.class);
	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.CompanyService#addCompany(com.gomap.performance.master.dto.CompanyMasterDto)
	 */
	@Autowired
	private CompanyDao companyDao;
	@Override
	@Transactional
	public ResponseDTO addCompany(CompanyMasterDto companyMasterDto) {
		// TODO Auto-generated method stub
		ResponseDTO responseDTO=new ResponseDTO();
		logger.info("inside CompanyMasterServiceImpl addCompany");
		try {
			CompanyMaster companyMaster=new CompanyMaster();
			if(companyMasterDto.getAdminEmail()!=null)
			{
				companyMaster.setAdminEmail(companyMasterDto.getAdminEmail());
			}
			if(companyMasterDto.getAdminMobile()!=null)
			{
				companyMaster.setAdminMobile(companyMasterDto.getAdminMobile());
			}
			if(companyMasterDto.getApiURLPrefix()!=null)
			{
				companyMaster.setApiURLPrefix(companyMasterDto.getApiURLPrefix());
			}
			if(companyMasterDto.getCompanyDomain()!=null)
			{
				companyMaster.setCompanyDomain(companyMasterDto.getCompanyDomain());
			}
			if(companyMasterDto.getCompanyName()!=null)
			{
				companyMaster.setCompanyName(companyMasterDto.getCompanyName());
			}
			if(companyMasterDto.getContactPerson()!=null)
			{
				companyMaster.setContactPerson(companyMasterDto.getContactPerson());
			}
			if(companyMasterDto.getIndustryType()!=null)
			{
				companyMaster.setIndustryType(companyMasterDto.getIndustryType());
			}
			if(companyMasterDto.getPortalName()!=null)
			{
				companyMaster.setPortalName(companyMasterDto.getPortalName());
			}
			companyMaster.setActivateFlag(AppConstants.ACTIVE_FLAG);
			companyMaster.setCreatedDate(new Date());
			//companyMaster.setUpdatedDate(new Date());
			companyDao.storeCompanyData(companyMaster);
			responseDTO.setDataObj(companyMaster);
			responseDTO.setSuccessMsg("Company details created");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
	
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
			logger.error("Error while creating company detailsd",e);
		}
				
		return responseDTO;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.CompanyService#updateCompany(com.gomap.performance.master.dto.CompanyMasterDto)
	 */
	@Override
	@Transactional
	public ResponseDTO updateCompany(CompanyMasterDto companyMasterDto) {
		// TODO Auto-generated method stub
		ResponseDTO responseDTO=new ResponseDTO();
		logger.info("inside CompanyMasterServiceImpl updateCompany");
		try {
			
			CompanyMaster companyMaster=new CompanyMaster();
			if(companyMasterDto.getCompanyId()!=null)
			{
				
				companyMaster.setCompanyId(companyMasterDto.getCompanyId());
				List<CompanyMaster> companyList=companyDao.getCompanyDetails(companyMaster);
				if(companyList!=null && !companyList.isEmpty())
				{
					companyMaster=companyList.get(0);
					if(companyMasterDto.getAdminEmail()!=null)
					{
						companyMaster.setAdminEmail(companyMasterDto.getAdminEmail());
					}
					if(companyMasterDto.getAdminMobile()!=null)
					{
						companyMaster.setAdminMobile(companyMasterDto.getAdminMobile());
					}
					if(companyMasterDto.getApiURLPrefix()!=null)
					{
						companyMaster.setApiURLPrefix(companyMasterDto.getApiURLPrefix());
					}
					if(companyMasterDto.getCompanyDomain()!=null)
					{
						companyMaster.setCompanyDomain(companyMasterDto.getCompanyDomain());
					}
					if(companyMasterDto.getCompanyName()!=null)
					{
						companyMaster.setCompanyName(companyMasterDto.getCompanyName());
					}
					if(companyMasterDto.getContactPerson()!=null)
					{
						companyMaster.setContactPerson(companyMasterDto.getContactPerson());
					}
					if(companyMasterDto.getIndustryType()!=null)
					{
						companyMaster.setIndustryType(companyMasterDto.getIndustryType());
					}
					if(companyMasterDto.getPortalName()!=null)
					{
						companyMaster.setPortalName(companyMasterDto.getPortalName());
					}
					companyMaster.setUpdatedDate(new Date());
					companyDao.updateCompany(companyMaster);
					responseDTO.setDataObj(companyMaster);
					responseDTO.setSuccessMsg("Company details Updated");
					responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
			
				}else
				{
					responseDTO.setDataObj(companyMasterDto);
					responseDTO.setErrorMsg("Company details not availabe in system");
					responseDTO.setErrorCode(411);
				
				}
			}
			else {
				responseDTO.setDataObj(companyMaster);
				responseDTO.setErrorMsg("Company Id is mandatory to update");
				responseDTO.setErrorCode(411);
			
				
			}
			
			
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
			logger.error("Error while updating company details",e);
		}
				
		return responseDTO;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.service.CompanyService#getCompanyDetails(com.gomap.performance.master.dto.CompanyMasterDto)
	 */
	@Override
	@Transactional
	public ResponseDTO getCompanyDetails(CompanyMasterDto companyMasterDto) {
		// TODO Auto-generated method stub
		logger.info("Inside getCompanyDetails");
		ResponseDTO responseDTO = new ResponseDTO();

		try {
			CompanyMaster companyMaster = new CompanyMaster();
			if (companyMasterDto.getCompanyId() != null) {
				companyMaster.setCompanyId(companyMasterDto.getCompanyId());
			}
			if (companyMasterDto.getCompanyName() != null) {
				companyMaster.setCompanyName(companyMasterDto.getCompanyName());
			}

			List<CompanyMaster> compList = companyDao.getCompanyDetails(companyMaster);
			responseDTO.setDataObj(compList);
			responseDTO.setSuccessMsg("Company Details sent Successfully");
			responseDTO.setErrorCode(ErrorCodeEnums.NO_ERROR.getErrorCode());
		} catch (Exception e) {
			// TODO: handle exception
			responseDTO.setDataObj(e);
			responseDTO.setErrorMsg(e.getMessage());
			responseDTO.setErrorCode(411);
			logger.error("Error while getting company List", e);
		}
		return responseDTO;
	}}
