/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.master.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.dao.AdminEmployeeDao;
import com.gomap.performance.master.model.EmployeeMaster;
import com.gomap.performance.master.model.UserMaster;

/**
 * @author krishnakant.bairagi
 *
 */
@Repository
public class AdminEmployeeDaoImpl implements AdminEmployeeDao {
	
	@Autowired
	private SessionFactory sessionFactory;


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.EmployeeDao#getUserByUserId(java.lang.String)
	 */
	@Override
	public EmployeeMaster getUserByUserId(String userId) throws Exception {
		// TODO Auto-generated method stub

		Criteria criteria = this.sessionFactory.getCurrentSession()
				.createCriteria(EmployeeMaster.class);
		criteria.add(Restrictions.eq("employeeId", userId).ignoreCase());
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		return (EmployeeMaster) criteria.uniqueResult();
	
		
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.EmployeeDao#storeEmployeeData(com.gomap.performance.master.model.EmployeeMaster)
	 */
	@Override
	public EmployeeMaster storeEmployeeData(EmployeeMaster employeeMaster) throws Exception {
		// TODO Auto-generated method stub
		Session session=sessionFactory.getCurrentSession();
		 session.save(employeeMaster);
		return employeeMaster;
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#updateEmployee(com.gomap.performance.master.model.EmployeeMaster)
	 */
	@Override
	public EmployeeMaster updateEmployee(EmployeeMaster employeeMaster) throws Exception {
		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().update(employeeMaster);
		return employeeMaster;
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#getAdminEmployee(com.gomap.performance.master.model.EmployeeMaster)
	 */
	@Override
	public List<EmployeeMaster> getAdminEmployee(EmployeeMaster employeeMaster) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=sessionFactory.getCurrentSession().createCriteria(EmployeeMaster.class);
		if(employeeMaster.getEmployeeId()!=null)
		{
		criteria.add(Restrictions.eq("employeeId", employeeMaster.getEmployeeId()));	
		}
		if(employeeMaster.getCompanyId()!=null)
		{
		criteria.add(Restrictions.eq("companyId", employeeMaster.getCompanyId()));	
		}
		if(employeeMaster.getMobileNo()!=null)
		{
		criteria.add(Restrictions.eq("mobileNo", employeeMaster.getMobileNo()));	
		}
		if(employeeMaster.getEmail()!=null)
		{
		criteria.add(Restrictions.eq("Email", employeeMaster.getEmail()));	
		}
		if(employeeMaster.getfName()!=null)
		{
		criteria.add(Restrictions.like("fName", employeeMaster.getfName()));	
		}
		if(employeeMaster.getmName()!=null)
		{
		criteria.add(Restrictions.like("mName", employeeMaster.getmName()));	
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		return criteria.list();
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#storeUserData(com.gomap.performance.master.model.UserMaster)
	 */
	@Override
	public UserMaster storeUserData(UserMaster userMaster) throws Exception {
		Session session=sessionFactory.getCurrentSession();
		 session.save(userMaster);
		return userMaster;
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#getUserData(java.lang.String, java.lang.String, java.lang.Integer)
	 */
	@Override
	public UserMaster getUserData(String email, String password, Integer userId) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria=sessionFactory.getCurrentSession().createCriteria(UserMaster.class);
		if(email!=null)
		{
			criteria.add(Restrictions.eq("email", email));
		}
		if(password!=null)
		{
			criteria.add(Restrictions.eq("password", password));
		}
		if(userId!=null)
		{
			criteria.add(Restrictions.eq("userId", userId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		return (UserMaster) criteria.uniqueResult();
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#getUserDataByTokenId(java.lang.String)
	 */
	@Override
	public UserMaster getUserDataByTokenId(String tokenId) throws Exception {
		// TODO Auto-generated method stub

		// TODO Auto-generated method stub
		Criteria criteria=sessionFactory.getCurrentSession().createCriteria(UserMaster.class);
		
		if(tokenId!=null)
		{
			criteria.add(Restrictions.eq("emailToken", tokenId));
		}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		return (UserMaster) criteria.uniqueResult();
	
		
	}


	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.AdminEmployeeDao#updateUser(com.gomap.performance.master.model.UserMaster)
	 */
	@Override
	public UserMaster updateUser(UserMaster userMaster) throws Exception {
		// TODO Auto-generated method stub

		Session session=sessionFactory.getCurrentSession();
		 session.update(userMaster);
		return userMaster;
	
	}

}
