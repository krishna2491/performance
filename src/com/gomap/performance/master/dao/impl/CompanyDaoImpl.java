/**
 * Generated By Krishnakant Bairagi
 */
package com.gomap.performance.master.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.gomap.performance.master.constant.AppConstants;
import com.gomap.performance.master.dao.CompanyDao;
import com.gomap.performance.master.model.CompanyMaster;
import com.gomap.performance.master.model.IndustryMaster;

/**
 * @author krishnakant.bairagi
 *
 */
@Repository
public class CompanyDaoImpl implements CompanyDao {
	/*
	 * (non-Javadoc)
	 * 
	 * @see com.gomap.performance.master.dao.CompanyDao#storeCompanyData(com.gomap.
	 * performance.master.model.CompanyMaster)
	 */

	@Autowired
	private SessionFactory sessionFactory;

	@Override
	public CompanyMaster updateCompany(CompanyMaster companyMaster) throws Exception {
		sessionFactory.getCurrentSession().update(companyMaster);
		return companyMaster;

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.gomap.performance.master.dao.CompanyDao#getCompanyDetails(com.gomap.
	 * performance.master.model.CompanyMaster)
	 */
	@Override
	public List<CompanyMaster> getCompanyDetails(CompanyMaster companyMaster) throws Exception {
		// TODO Auto-generated method stub

		// TODO Auto-generated method stub
		Criteria criteria = sessionFactory.getCurrentSession().createCriteria(CompanyMaster.class);
		if (companyMaster.getCompanyId() != null) {
			criteria.add(Restrictions.eq("companyId", companyMaster.getCompanyId()));
		}
		if (companyMaster.getCompanyName() != null) {
			criteria.add(Restrictions.eq("companyName", companyMaster.getCompanyName()));
		}
		if (companyMaster.getAdminEmail() != null) {
			criteria.add(Restrictions.eq("adminEmail", companyMaster.getAdminEmail()));
		}
		if (companyMaster.getContactPerson() != null) {
			criteria.add(Restrictions.eq("contactPerson", companyMaster.getContactPerson()));
		}
		if (companyMaster.getPortalName()!= null) {
			criteria.add(Restrictions.eq("portalName", companyMaster.getPortalName()));
		}
//			if(companyMaster.getCompanyName()!=null)
//			{
//				criteria.add(Restrictions.eq("companyName", companyMaster.getCompanyId()));
//			}
//			if(companyMaster.getCompanyName()!=null)
//			{
//				criteria.add(Restrictions.eq("companyName", companyMaster.getCompanyId()));
//			}
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		criteria.addOrder(Order.desc("createdDate"));
		return criteria.list();

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.gomap.performance.master.dao.CompanyDao#storeCompanyData(com.gomap.
	 * performance.master.model.CompanyMaster)
	 */
	@Override
	public CompanyMaster storeCompanyData(CompanyMaster companyMaster) throws Exception {
		// TODO Auto-generated method stub

		// TODO Auto-generated method stub
		sessionFactory.getCurrentSession().save(companyMaster);
		String sql="CREATE DATABASE IF NOT EXISTS emf_test_"+companyMaster.getPortalName();
		sessionFactory.getCurrentSession().createSQLQuery(sql).executeUpdate();
		return companyMaster;
	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.CompanyDao#getCompanyByPortalName(com.gomap.performance.master.model.CompanyMaster)
	 */
	@Override
	public List<CompanyMaster> getCompanyByPortalName(String portalName) throws Exception {
		// TODO Auto-generated method stub

		// TODO Auto-generated method stub
		Criteria criteria = sessionFactory.getCurrentSession().createCriteria(CompanyMaster.class);
		if (portalName!= null) {
			criteria.add(Restrictions.eq("portalName", portalName.trim()));
		}
		
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		
		return criteria.list();

	}

	/* (non-Javadoc)
	 * @see com.gomap.performance.master.dao.CompanyDao#getIndustryMaster(java.lang.Integer)
	 */
	@Override
	public List<IndustryMaster> getIndustryMaster(Integer industryId) throws Exception {
		// TODO Auto-generated method stub
		Criteria criteria = sessionFactory.getCurrentSession().createCriteria(IndustryMaster.class);
		if (industryId!= null) {
			criteria.add(Restrictions.eq("industryId",industryId));
		}
		
		criteria.add(Restrictions.eq("activateFlag", AppConstants.ACTIVE_FLAG));
		
		return criteria.list();
	
	}

}
